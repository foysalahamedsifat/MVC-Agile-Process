trigger:
  branches:
    include:
      - main

stages:
# Build Stage
- stage: Build
  displayName: 'Build and Publish Artifact'
  jobs:
    - job: BuildJob
      pool:
        name: 'Default'  # Your self-hosted agent pool
      steps:
        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            version: '8.0.x'
            installationPath: $(Agent.ToolsDirectory)/dotnet

        - task: DotNetCoreCLI@2
          inputs:
            command: 'restore'
            projects: '**/*.sln'

        - task: DotNetCoreCLI@2
          inputs:
            command: 'build'
            projects: '**/*.sln'
            arguments: '/p:Configuration=Release'

        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '--configuration Release'
            publishDirectory: '$(Build.ArtifactStagingDirectory)'
            zipAfterPublish: true

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'fsifat'
            publishLocation: 'Container'

# Deploy Stage
- stage: Deploy
  displayName: 'Deploy to Azure'
  dependsOn: Build
  jobs:
    - job: DeployToAzure
      pool:
        vmImage: 'windows-latest'
      steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'fsifat'
            downloadPath: '$(System.ArtifactsDirectory)'

        - task: AzureWebApp@1
          inputs:
            azureSubscription: 'MyDevServiceConnection'
            appName: 'my-web-app-name'
            package: '$(System.ArtifactsDirectory)/fsifat/**/*.zip'
