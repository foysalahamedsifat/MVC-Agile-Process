trigger:
  branches:
    include:
      - main  # The pipeline will trigger only when changes are pushed to the main branch

pool:
  name: 'SelfHostedPool'  # Use the name of your self-hosted agent pool

stages:
  # Build Stage
  - stage: Build
    displayName: 'Build and Publish Artifact'
    jobs:
      - job: BuildJob
        pool:
          name: 'SelfHostedPool'  # Ensure you use your self-hosted agent pool
        steps:
          # Use the .NET SDK
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '8.0.x'  # Ensure you are using the correct .NET version
              installationPath: $(Agent.ToolsDirectory)/dotnet

          # Restore NuGet packages
          - task: DotNetCoreCLI@2
            inputs:
              command: 'restore'
              projects: '**/*.sln'  # Restores all solutions in the repository

          # Build the solution in Release configuration
          - task: DotNetCoreCLI@2
            inputs:
              command: 'build'
              projects: '**/*.sln'
              arguments: '/p:Configuration=Release'  # Build in Release mode

          # Publish the project and stage files
          - task: DotNetCoreCLI@2
            inputs:
              command: 'publish'
              publishWebProjects: true  # Ensure this is true if you're publishing a web project
              arguments: '--configuration Release'
              publishDirectory: '$(Build.ArtifactStagingDirectory)'  # Ensure it's a valid path
              zipAfterPublish: true  # Zips the published content

          # List files in Artifact Staging Directory for debugging
          - task: PowerShell@2
            displayName: 'List Files in Artifact Staging Directory'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Listing files in $(Build.ArtifactStagingDirectory)"
                Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)" -Recurse

          # Publish the build artifacts
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'  # Path to the published files
              ArtifactName: 'fsifat'  # Name of the artifact to be published
              publishLocation: 'Container'  # Store the artifact in the pipeline's container

  # Deploy Stage
  - stage: Deploy
    displayName: 'Deploy to Azure'
    dependsOn: Build  # This ensures the Deploy stage runs only after the Build stage
    jobs:
      - job: DeployToAzure
        pool:
          name: 'SelfHostedPool'  # Ensure you use your self-hosted agent pool
        steps:
          # Download the build artifacts from the previous stage
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'  # Use the current build artifacts
              downloadType: 'single'
              artifactName: 'fsifat'  # Name of the artifact to download
              downloadPath: '$(System.ArtifactsDirectory)'  # Path to download the artifact

          # List files in Artifact Download Directory for debugging
          - task: PowerShell@2
            displayName: 'List Files in Artifact Download Directory'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Listing files in $(System.ArtifactsDirectory)"
                Get-ChildItem -Path "$(System.ArtifactsDirectory)" -Recurse

          # Deploy the artifact to Azure Web App
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'MyDevServiceConnection'  # The name of your Azure service connection
              appName: 'my-web-app-fsifat'  # Replace with your actual Azure Web App name
              package: '$(System.ArtifactsDirectory)/fsifat/**/*.zip'  # Adjust path to match the published artifact
