trigger:
  branches:
    include:
      - main  # Change this to your default branch if it's different

# Use the self-hosted agent pool
pool:
  name: 'SelfHostedPool'  # Replace with the name of your self-hosted agent pool

stages:
  # Build Stage
  - stage: Build
    displayName: 'Build and Publish Artifact'
    jobs:
      - job: BuildJob
        pool:
          name: 'SelfHostedPool'  # Ensure you use your self-hosted agent pool
        steps:
          # Use the .NET SDK
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '8.0.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          # Restore NuGet packages
          - task: DotNetCoreCLI@2
            inputs:
              command: 'restore'
              projects: '**/*.sln'

          # Build the solution in Release configuration
          - task: DotNetCoreCLI@2
            inputs:
              command: 'build'
              projects: '**/*.sln'
              arguments: '/p:Configuration=Release'

          # Publish the project and stage files
          - task: DotNetCoreCLI@2
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration Release'
              publishDirectory: '$(Build.ArtifactStagingDirectory)\publish'  # Ensure it's a valid path
              zipAfterPublish: true

          # List files in Artifact Staging Directory for debugging
          - task: PowerShell@2
            displayName: 'List Files in Artifact Staging Directory'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Listing files in $(Build.ArtifactStagingDirectory)"
                Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)" -Recurse

          # List files in the publish directory for debugging
          - task: PowerShell@2
            displayName: 'List Files in Publish Directory'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Listing files in $(Build.ArtifactStagingDirectory)\publish"
                Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)\publish" -Recurse

          # Publish the build artifacts
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)\publish'  # Path to the published files
              ArtifactName: 'fsifat'  # Name of the artifact to be published
              publishLocation: 'Container'

  # Deploy Stage
  - stage: Deploy
    displayName: 'Deploy to Azure'
    dependsOn: Build
    jobs:
      - job: DeployToAzure
        pool:
          name: 'SelfHostedPool'  # Ensure you use your self-hosted agent pool
        steps:
          # Download the build artifacts from the previous stage
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'fsifat'  # Name of the artifact to download
              downloadPath: '$(System.ArtifactsDirectory)'  # Path to download the artifact

          # List files in Artifact Download Directory for debugging
          - task: PowerShell@2
            displayName: 'List Files in Artifact Download Directory'
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Listing files in $(System.ArtifactsDirectory)"
                Get-ChildItem -Path "$(System.ArtifactsDirectory)" -Recurse

          # Deploy the artifact to Azure Web App
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'MyDevServiceConnection'  # The name of your Azure service connection
              appName: 'my-web-app-name'  # Replace with your actual Azure Web App name
              package: '$(System.ArtifactsDirectory)/fsifat/**/*.zip'  # Path to the published artifact
